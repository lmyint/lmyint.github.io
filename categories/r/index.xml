<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Hugo Apéro</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Hugo Apéro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 10 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dungeons and Dragons Web Scraping with rvest and RSelenium</title>
      <link>/writing/dnd-scraping-rvest-rselenium/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/writing/dnd-scraping-rvest-rselenium/</guid>
      <description>I love Dungeons and Dragons. I am also a data-loving statistician. At some point, these worlds were bound to collide.
For those unfamiliar with Dungeons and Dragons (DnD), it is a role-playing game that is backed by an extraodinary amount of data. The overall gist is that players create characters that band together with other characters to travel the world and adventure. Essentially, it&amp;rsquo;s collective storytelling aided by dice as vehicles of chance and uncertainty.</description>
    </item>
    
    <item>
      <title>Tips for using the Hugo academic theme</title>
      <link>/writing/hugo-academic-tips/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/writing/hugo-academic-tips/</guid>
      <description>I recently migrated my personal website and Wordpress blog to blogdown. As an academic, it was natural to use the Academic theme. The blogdown package made the conversion fairly straighforward, but I still had to spend some time figuring out how to work with this Hugo theme.
The source and rendered files for my website are available on GitHub:
Public, rendered site: the public directory within my blogdown/Hugo project Hugo content and source files: all files and directories within my blogdown/Hugo project (i.</description>
    </item>
    
    <item>
      <title>Creating a Shiny app with Google login</title>
      <link>/writing/shiny-app-with-google-login/</link>
      <pubDate>Sun, 01 Jan 2017 18:24:29 +0000</pubDate>
      
      <guid>/writing/shiny-app-with-google-login/</guid>
      <description>Creating a Shiny application that enables user login can be useful for tailoring individual user experience and for analyzing user actions with profile-type data. With basic file I/O functions, it is possible to create a simple but insecure app that stores login names and passwords in text files. A much more secure alternative is to use an existing authentication system to handle login. I’m sure many of you have seen websites that allow you to login via Google or Facebook.</description>
    </item>
    
  </channel>
</rss>
